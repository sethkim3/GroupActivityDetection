from sklearn import linear_model

def engineer_features(samples_df, features):
    """
    Engineer and append features to the samples dataframe.
    :param samples_df: Dataframe of samples generated by generate_samples function.
    :param features: A list of features.
    :return: A dataframe with engineered features appended.
    """

def learn_activities(samples_df_with_engineered_features, model_type):
    """
    Train a model to classify activities based on engineered features and use cross-validation for accuracy.
    :param samples_df_with_engineered_features: A dataframe generated by generate_samples and engineer_features.
    :param model_type: Model to use for classification.
    :return: A trained model.
    """

def predict_activities(samples_df_with_engineered_features, model):
    """
    Classify the activity type given an unlabeled set of sample data and a trained classification model.
    :param samples_df_with_engineered_features: Dataframe of sample data without activity labels generated by
    generate_samples and engineer_features.
    :param model: A trained classification model returned by learn_activities function.
    :return: Classifications of the input data and a score for accuracy.
    """